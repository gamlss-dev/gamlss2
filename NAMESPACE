import("Formula")
import("gamlss.dist")
import("gamlss.data")
import("mgcv")

importFrom("stats", "terms", ".getXlevels", "coef", "dnorm", "lm.wfit",
  "make.link", "model.frame", "model.matrix", "model.offset",
  "model.response", "model.weights", "nlminb", "pnorm",
  "qnorm", "rnorm", "runif", "sd", "update", "predict", "family",
  "density", "fitted", "lm", "ppoints", "qqnorm", "quantile", "residuals",
  "as.formula", "optimHess", "printCoefmat", "pt", "vcov", "AIC", "BIC",
  "formula", "logLik", "na.omit", "var", "optim", "median")

importFrom("utils", "flush.console", "tail", "getFromNamespace", "capture.output")

importFrom("grDevices", "gray.colors", "n2mfrow", "rgb", "contourLines", "trans3d",
  "dev.off", "png")

importFrom("graphics", "abline", "axis", "barplot", "box", "grid", "hist",
  "lines", "par", "polygon", "rect", "image", "text", "rug", "matplot",
  "points", "legend")

export(
  "fake_formula",
  "gamlss2",
  "gamlss2.formula",
  "gamlss2.list",
  "gamlss2_control",
  "RS",
  "CG",
  "special_fit",
  "special_predict",
  "Rsq",
  "GAIC",
  "available_families",
  "findFamily",
  "fitFamily"
)

S3method(gamlss2, formula)
S3method(gamlss2, list)
S3method(plot, gamlss2)
S3method(plot, gamlss2.list)
S3method(predict, gamlss2)
S3method(fitted, gamlss2)
S3method(residuals, gamlss2)
S3method(family, gamlss2)
S3method(logLik, gamlss2)
S3method(deviance, gamlss2)
S3method(special_fit, cf)
S3method(special_predict, cf.fitted)
S3method(special_predict, default)
S3method(vcov, gamlss2)
S3method(confint, gamlss2)
S3method(coef, gamlss2)
S3method(summary, gamlss2)
S3method(print, gamlss2)
S3method(print, summary.gamlss2)
S3method(print, coef.gamlss2)
S3method(AIC, gamlss2)
S3method(BIC, gamlss2)
S3method(c, gamlss2)
S3method(quantile, gamlss2)

S3method(distributions3::prodist, gamlss2)

useDynLib(gamlss2, .registration = TRUE)

